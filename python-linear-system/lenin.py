import numpy as np
import matplotlib.pyplot as plt

fig, ax = plt.subplots()

data = [
[282,282,277,274,266,259,258,249,248,242,240,238,240,239,
     242,242,244,244,247,247,249,249,250,251,253,252,254,253,
     254,254,257,258,258,257,256,253,253,251,250,250,249,247,
     245,242,241,237,235,232,228,225,225,224,222,218,215,211,
     208,203,199,193,185,181,173,163,147,144,142,134,131,127,
     121,113,109,106,104,99,95,92,90,87,82,78,77,76,73,72,71,
     65,62,61,60,57,56,55,54,53,52,51,45,42,40,40,38,40,38,40,
     40,43,45,45,45,43,42,39,36,35,22,20,19,19,20,21,22,27,26,
     25,21,19,19,20,20,22,22,25,24,26,28,28,27,25,25,20,20,19,
     19,21,22,23,25,25,28,29,33,34,39,40,42,43,49,50,55,59,67,
     72,80,83,86,88,89,92,92,92,89,89,87,84,81,78,76,73,72,71,70,67,67],
 [0,76,81,83,87,93,94,103,106,112,117,124,126,127,130,133,135,
     137,140,142,143,145,146,153,156,159,160,165,167,169,176,182,
     194,199,203,210,215,217,222,226,229,236,240,243,246,250,254,
     261,266,271,273,275,277,280,285,287,289,292,294,297,300,301,
     302,303,301,301,302,301,303,302,300,300,299,298,296,294,293,
     293,291,288,287,284,282,282,280,279,277,273,268,267,265,262,
     260,257,253,245,240,238,228,215,214,211,209,204,203,202,200,
     197,193,191,189,186,185,184,179,176,163,158,154,152,150,147,
     145,142,140,139,136,133,128,127,124,123,121,117,111,106,105,
     101,94,92,90,85,82,81,62,55,53,51,50,48,48,47,47,48,48,49,49,
     51,51,53,54,54,58,59,58,56,56,55,54,50,48,46,44,41,36,31,21,
     16,13,11,7,5,4,2,0]]

n = len(data[0])

output = [[],[]]

for d in range(2):
    A = np.matrix(np.zeros(((n-1)+(n-2)+2,n)))
    b = np.matrix(np.zeros(((n-1)+(n-2)+2,1)))

    A[0,0] = 1.*100.
    b[0,0] = data[d][0]*100.

    A[1,n-1] = 1.*100.
    b[1,0] = data[d][n-1]*100.

    row = 2
    for i in range(0,n-1):
        scale = .1
        A[row, i] = -1.*scale
        A[row, i+1] = 1.*scale
        b[row, 0] = (data[d][i+1]-data[d][i])*scale
        row += 1

    for i in range(1,n-1):
        A[row, i] = 2.
        A[row, i-1] = -1.
        A[row, i+1] = -1.
        b[row, 0] = 1.9*(data[d][i]*2. - data[d][i-1] - data[d][i+1])
        row += 1

    output[d] = (np.linalg.inv(A.transpose()*A)*A.transpose()*b).transpose().tolist()[0]

ax.plot(data[0], data[1],'bs-')
ax.plot(output[0], output[1])
plt.show()

